diff --git a/node_modules/@react-native-async-storage/async-storage/android/src/main/java/com/reactnativecommunity/asyncstorage/AsyncStorageModule.java b/node_modules/@react-native-async-storage/async-storage/android/src/main/java/com/reactnativecommunity/asyncstorage/AsyncStorageModule.java
index 3e40248..2aa4043 100644
--- a/node_modules/@react-native-async-storage/async-storage/android/src/main/java/com/reactnativecommunity/asyncstorage/AsyncStorageModule.java
+++ b/node_modules/@react-native-async-storage/async-storage/android/src/main/java/com/reactnativecommunity/asyncstorage/AsyncStorageModule.java
@@ -11,7 +11,7 @@ import android.database.Cursor;
 import android.database.sqlite.SQLiteStatement;
 import android.os.AsyncTask;
 
-import com.facebook.common.logging.FLog;
+//import com.facebook.common.logging.FLog;
 import com.facebook.react.bridge.Arguments;
 import com.facebook.react.bridge.Callback;
 import com.facebook.react.bridge.GuardedAsyncTask;
@@ -157,7 +157,7 @@ public final class AsyncStorageModule
               } while (cursor.moveToNext());
             }
           } catch (Exception e) {
-            FLog.w(ReactConstants.TAG, e.getMessage(), e);
+//            FLog.w(ReactConstants.TAG, e.getMessage(), e);
             callback.invoke(AsyncStorageErrorUtil.getError(null, e.getMessage()), null);
             return;
           } finally {
@@ -225,13 +225,13 @@ public final class AsyncStorageModule
           }
           mReactDatabaseSupplier.get().setTransactionSuccessful();
         } catch (Exception e) {
-          FLog.w(ReactConstants.TAG, e.getMessage(), e);
+//          FLog.w(ReactConstants.TAG, e.getMessage(), e);
           error = AsyncStorageErrorUtil.getError(null, e.getMessage());
         } finally {
           try {
             mReactDatabaseSupplier.get().endTransaction();
           } catch (Exception e) {
-            FLog.w(ReactConstants.TAG, e.getMessage(), e);
+//            FLog.w(ReactConstants.TAG, e.getMessage(), e);
             if (error == null) {
               error = AsyncStorageErrorUtil.getError(null, e.getMessage());
             }
@@ -277,13 +277,13 @@ public final class AsyncStorageModule
           }
           mReactDatabaseSupplier.get().setTransactionSuccessful();
         } catch (Exception e) {
-          FLog.w(ReactConstants.TAG, e.getMessage(), e);
+//          FLog.w(ReactConstants.TAG, e.getMessage(), e);
           error = AsyncStorageErrorUtil.getError(null, e.getMessage());
         } finally {
           try {
           mReactDatabaseSupplier.get().endTransaction();
           } catch (Exception e) {
-            FLog.w(ReactConstants.TAG, e.getMessage(), e);
+//            FLog.w(ReactConstants.TAG, e.getMessage(), e);
             if (error == null) {
               error = AsyncStorageErrorUtil.getError(null, e.getMessage());
             }
@@ -341,13 +341,13 @@ public final class AsyncStorageModule
           }
           mReactDatabaseSupplier.get().setTransactionSuccessful();
         } catch (Exception e) {
-          FLog.w(ReactConstants.TAG, e.getMessage(), e);
+//          FLog.w(ReactConstants.TAG, e.getMessage(), e);
           error = AsyncStorageErrorUtil.getError(null, e.getMessage());
         } finally {
           try {
             mReactDatabaseSupplier.get().endTransaction();
           } catch (Exception e) {
-            FLog.w(ReactConstants.TAG, e.getMessage(), e);
+//            FLog.w(ReactConstants.TAG, e.getMessage(), e);
             if (error == null) {
               error = AsyncStorageErrorUtil.getError(null, e.getMessage());
             }
@@ -379,7 +379,7 @@ public final class AsyncStorageModule
           mReactDatabaseSupplier.clear();
           callback.invoke();
         } catch (Exception e) {
-          FLog.w(ReactConstants.TAG, e.getMessage(), e);
+//          FLog.w(ReactConstants.TAG, e.getMessage(), e);
           callback.invoke(AsyncStorageErrorUtil.getError(null, e.getMessage()));
         }
       }
@@ -410,7 +410,7 @@ public final class AsyncStorageModule
             } while (cursor.moveToNext());
           }
         } catch (Exception e) {
-          FLog.w(ReactConstants.TAG, e.getMessage(), e);
+//          FLog.w(ReactConstants.TAG, e.getMessage(), e);
           callback.invoke(AsyncStorageErrorUtil.getError(null, e.getMessage()), null);
           return;
         } finally {
diff --git a/node_modules/@react-native-async-storage/async-storage/android/src/main/java/com/reactnativecommunity/asyncstorage/ReactDatabaseSupplier.java b/node_modules/@react-native-async-storage/async-storage/android/src/main/java/com/reactnativecommunity/asyncstorage/ReactDatabaseSupplier.java
index c7c59b0..0b85be6 100644
--- a/node_modules/@react-native-async-storage/async-storage/android/src/main/java/com/reactnativecommunity/asyncstorage/ReactDatabaseSupplier.java
+++ b/node_modules/@react-native-async-storage/async-storage/android/src/main/java/com/reactnativecommunity/asyncstorage/ReactDatabaseSupplier.java
@@ -11,7 +11,7 @@ import android.content.Context;
 import android.database.sqlite.SQLiteDatabase;
 import android.database.sqlite.SQLiteException;
 import android.database.sqlite.SQLiteOpenHelper;
-import com.facebook.common.logging.FLog;
+//import com.facebook.common.logging.FLog;
 import com.facebook.react.common.ReactConstants;
 import javax.annotation.Nullable;
 
@@ -117,11 +117,11 @@ public class ReactDatabaseSupplier extends SQLiteOpenHelper {
     try {
       clear();
       closeDatabase();
-      FLog.d(ReactConstants.TAG, "Cleaned " + DATABASE_NAME);
+//      FLog.d(ReactConstants.TAG, "Cleaned " + DATABASE_NAME);
     } catch (Exception e) {
       // Clearing the database has failed, delete it instead.
       if (deleteDatabase()) {
-        FLog.d(ReactConstants.TAG, "Deleted Local Database " + DATABASE_NAME);
+//        FLog.d(ReactConstants.TAG, "Deleted Local Database " + DATABASE_NAME);
         return;
       }
       // Everything failed, throw
